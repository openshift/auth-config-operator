// Code generated by client-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift/cluster-kube-apiserver-operator/pkg/apis/kubeapiserver/v1alpha1"
	scheme "github.com/openshift/cluster-kube-apiserver-operator/pkg/generated/clientset/versioned/scheme"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	types "k8s.io/apimachinery/pkg/types"
	watch "k8s.io/apimachinery/pkg/watch"
	rest "k8s.io/client-go/rest"
)

// KubeApiserverOperatorConfigsGetter has a method to return a KubeApiserverOperatorConfigInterface.
// A group's client should implement this interface.
type KubeApiserverOperatorConfigsGetter interface {
	KubeApiserverOperatorConfigs() KubeApiserverOperatorConfigInterface
}

// KubeApiserverOperatorConfigInterface has methods to work with KubeApiserverOperatorConfig resources.
type KubeApiserverOperatorConfigInterface interface {
	Create(*v1alpha1.KubeApiserverOperatorConfig) (*v1alpha1.KubeApiserverOperatorConfig, error)
	Update(*v1alpha1.KubeApiserverOperatorConfig) (*v1alpha1.KubeApiserverOperatorConfig, error)
	UpdateStatus(*v1alpha1.KubeApiserverOperatorConfig) (*v1alpha1.KubeApiserverOperatorConfig, error)
	Delete(name string, options *v1.DeleteOptions) error
	DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error
	Get(name string, options v1.GetOptions) (*v1alpha1.KubeApiserverOperatorConfig, error)
	List(opts v1.ListOptions) (*v1alpha1.KubeApiserverOperatorConfigList, error)
	Watch(opts v1.ListOptions) (watch.Interface, error)
	Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeApiserverOperatorConfig, err error)
	KubeApiserverOperatorConfigExpansion
}

// kubeApiserverOperatorConfigs implements KubeApiserverOperatorConfigInterface
type kubeApiserverOperatorConfigs struct {
	client rest.Interface
}

// newKubeApiserverOperatorConfigs returns a KubeApiserverOperatorConfigs
func newKubeApiserverOperatorConfigs(c *KubeapiserverV1alpha1Client) *kubeApiserverOperatorConfigs {
	return &kubeApiserverOperatorConfigs{
		client: c.RESTClient(),
	}
}

// Get takes name of the kubeApiserverOperatorConfig, and returns the corresponding kubeApiserverOperatorConfig object, and an error if there is any.
func (c *kubeApiserverOperatorConfigs) Get(name string, options v1.GetOptions) (result *v1alpha1.KubeApiserverOperatorConfig, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfig{}
	err = c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		Name(name).
		VersionedParams(&options, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// List takes label and field selectors, and returns the list of KubeApiserverOperatorConfigs that match those selectors.
func (c *kubeApiserverOperatorConfigs) List(opts v1.ListOptions) (result *v1alpha1.KubeApiserverOperatorConfigList, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfigList{}
	err = c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Do().
		Into(result)
	return
}

// Watch returns a watch.Interface that watches the requested kubeApiserverOperatorConfigs.
func (c *kubeApiserverOperatorConfigs) Watch(opts v1.ListOptions) (watch.Interface, error) {
	opts.Watch = true
	return c.client.Get().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&opts, scheme.ParameterCodec).
		Watch()
}

// Create takes the representation of a kubeApiserverOperatorConfig and creates it.  Returns the server's representation of the kubeApiserverOperatorConfig, and an error, if there is any.
func (c *kubeApiserverOperatorConfigs) Create(kubeApiserverOperatorConfig *v1alpha1.KubeApiserverOperatorConfig) (result *v1alpha1.KubeApiserverOperatorConfig, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfig{}
	err = c.client.Post().
		Resource("kubeapiserveroperatorconfigs").
		Body(kubeApiserverOperatorConfig).
		Do().
		Into(result)
	return
}

// Update takes the representation of a kubeApiserverOperatorConfig and updates it. Returns the server's representation of the kubeApiserverOperatorConfig, and an error, if there is any.
func (c *kubeApiserverOperatorConfigs) Update(kubeApiserverOperatorConfig *v1alpha1.KubeApiserverOperatorConfig) (result *v1alpha1.KubeApiserverOperatorConfig, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfig{}
	err = c.client.Put().
		Resource("kubeapiserveroperatorconfigs").
		Name(kubeApiserverOperatorConfig.Name).
		Body(kubeApiserverOperatorConfig).
		Do().
		Into(result)
	return
}

// UpdateStatus was generated because the type contains a Status member.
// Add a +genclient:noStatus comment above the type to avoid generating UpdateStatus().

func (c *kubeApiserverOperatorConfigs) UpdateStatus(kubeApiserverOperatorConfig *v1alpha1.KubeApiserverOperatorConfig) (result *v1alpha1.KubeApiserverOperatorConfig, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfig{}
	err = c.client.Put().
		Resource("kubeapiserveroperatorconfigs").
		Name(kubeApiserverOperatorConfig.Name).
		SubResource("status").
		Body(kubeApiserverOperatorConfig).
		Do().
		Into(result)
	return
}

// Delete takes name of the kubeApiserverOperatorConfig and deletes it. Returns an error if one occurs.
func (c *kubeApiserverOperatorConfigs) Delete(name string, options *v1.DeleteOptions) error {
	return c.client.Delete().
		Resource("kubeapiserveroperatorconfigs").
		Name(name).
		Body(options).
		Do().
		Error()
}

// DeleteCollection deletes a collection of objects.
func (c *kubeApiserverOperatorConfigs) DeleteCollection(options *v1.DeleteOptions, listOptions v1.ListOptions) error {
	return c.client.Delete().
		Resource("kubeapiserveroperatorconfigs").
		VersionedParams(&listOptions, scheme.ParameterCodec).
		Body(options).
		Do().
		Error()
}

// Patch applies the patch and returns the patched kubeApiserverOperatorConfig.
func (c *kubeApiserverOperatorConfigs) Patch(name string, pt types.PatchType, data []byte, subresources ...string) (result *v1alpha1.KubeApiserverOperatorConfig, err error) {
	result = &v1alpha1.KubeApiserverOperatorConfig{}
	err = c.client.Patch(pt).
		Resource("kubeapiserveroperatorconfigs").
		SubResource(subresources...).
		Name(name).
		Body(data).
		Do().
		Into(result)
	return
}
